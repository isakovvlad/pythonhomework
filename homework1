#Класс в котором создание n-мерного вектора, сложение и разность веторов, скалярное произведение векторов, модуль вектора и угл между векторами
class Vector():
    
    def __init__(self, *p):
        self.p = p 
    
    def __add__(self, x):
        k = []
        for i in range(len(self.p)):
            k.append(self.p[i] + x.p[i])
        return Vector(k)
        
    def __sub__(self, x):
        k = []
        for j in range(len(self.p)):
            k.append(self.p[j] - x.p[j])
        return Vector(k)
        
    def __mul__(self, x):
        k = 0
        for l in range(len(self.p)):
            k += self.p[l] * x.p[l]
        return k
    
    def __abs__(self):
        mod = ((self * self) ** 0.5)
        return mod
          
    def anglevectors(self, x):
        ang = ((self * x) / ((abs(self)) * (abs(x))))
        return ang

    def __str__(self):
        return str(*self.p)

#Это для теста
#a = Vector(1, 2, 3, 4)
#b = Vector(5, 6, 7, 8)
#print('a + b = c', a + b)
#print('b - a = d', b - a)
#print('scalar mul:', a * b)
#print('|a| =', abs(a), '|b| =', abs(b))
#print('angle', a.anglevectors(b))
